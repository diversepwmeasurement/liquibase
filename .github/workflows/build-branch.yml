concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
jobs:
  build:
    name: Build & Package
    needs: setup
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.event.after}}
    - continue-on-error: true
      name: Set up Java for publishing to GitHub Repository
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
        server-id: liquibase
    - continue-on-error: true
      name: Version Artifact
      run: './mvnw versions:set "-DnewVersion=${{ needs.setup.outputs.thisBranchName
        }}-SNAPSHOT"

        #./mvnw versions:set "-DnewVersion=${{ inputs.branchName }}-SNAPSHOT"

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish package
      run: './mvnw -B clean deploy -pl ''!liquibase-dist'' -DskipTests=true "-Dbuild.repository.owner=liquibase"
        "-Dbuild.repository.name=liquibase" "-Dbuild.branch=${{ needs.setup.outputs.thisBranchName
        }}" "-Dbuild.number=${{ github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.latestMergeSha
        }}" "-Dbuild.timestamp=${{ needs.setup.outputs.timeStamp }}"

        '
  setup:
    name: Setup
    outputs:
      latestMergeSha: ${{ steps.get-sha.outputs.latestMergeSha }}
      setupSuccessful: 'true'
      thisBranchName: ${{ steps.get-branch-name.outputs.thisBranchName }}
      timeStamp: ${{ steps.get-timestamp.outputs.timestamp }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.event.after}}
    - continue-on-error: true
      id: get-sha
      name: Get Latest Merge Commit SHA
      run: 'latest_merge_sha=`(git rev-parse HEAD)`

        echo "latestMergeSha=${latest_merge_sha}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: get-timestamp
      name: Get Timestamp
      run: 'timeStamp=$(date +''%Y-%m-%d %H:%M:%S %Z'')

        echo "timestamp=${timeStamp}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: get-branch-name
      name: Get Current BranchName
      run: "# this logic checks if the branch is from a forked repository PR or not.\
        \ Where -n is the inverse of -z (not empty)\nif [ -n \"${GITHUB_HEAD_REF}\"\
        \ ];\nthen\n  branch_name=${GITHUB_HEAD_REF}\nelse\n  branch_name=${{ github.ref_name\
        \ }}\nfi \n\nmodified_branch_name=`(echo $branch_name | tr '/' '_')`\necho\
        \ \"thisBranchName=$modified_branch_name\" >> $GITHUB_OUTPUT          \n"
name: Build Branch SNAPSHOT
on:
  repository_dispatch:
    types: trigger-ga___build-branch.yml
