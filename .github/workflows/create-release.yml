jobs:
  build-azure-uber-jar:
    needs:
    - setup
    secrets: inherit
    uses: liquibase/liquibase/.github/workflows/build-azure-uber-jar.yml@master
    with:
      branch: ${{ needs.setup.outputs.branch }}
      liquibase-version: ${{ needs.setup.outputs.version }}
  build-installers:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    name: Build Installers
    needs:
    - setup
    - reversion
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Restore Completed Artifacts
      uses: actions/cache@v4.0.2
      with:
        key: completed-artifacts-${{ github.run_number }}-${{ github.run_attempt }}
        path: re-version/final
    - continue-on-error: true
      env:
        GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
      name: Set up JDK for GPG
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_SECRET }}
        java-version: '8'
    - continue-on-error: true
      env:
        GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
        INSTALL4J_10_LICENSE: ${{ secrets.INSTALL4J_10_LICENSE }}
        INSTALL4J_APPLE_ID: ${{ secrets.INSTALL4J_APPLE_ID }}
        INSTALL4J_APPLE_ID_PASSWORD: ${{ secrets.INSTALL4J_APPLE_ID_PASSWORD }}
        INSTALL4J_APPLE_KEY: ${{ secrets.INSTALL4J_APPLE_KEY }}
        INSTALL4J_APPLE_KEY_PASSWORD: ${{ secrets.INSTALL4J_APPLE_KEY_PASSWORD }}
        INSTALL4J_WINDOWS_KEY: ${{ secrets.INSTALL4J_WINDOWS_KEY }}
        INSTALL4J_WINDOWS_KEY_PASSWORD: ${{ secrets.INSTALL4J_WINDOWS_KEY_PASSWORD
          }}
      name: Re-version Installers
      run: 'mkdir -p liquibase-dist/target/keys

        echo "Saving apple key"

        echo "$INSTALL4J_APPLE_KEY" | base64 -d > liquibase-dist/target/keys/datical_apple.p12

        echo "Saving windows key"

        echo "$INSTALL4J_WINDOWS_KEY" | base64 -d > liquibase-dist/target/keys/datical_windows.pfx

        version="${{ needs.setup.outputs.version }}"


        ##### Rebuild installers

        tarFile=$(pwd)/re-version/final/liquibase-$version.tar.gz

        scriptDir=$(pwd)/.github/util/


        mkdir -p liquibase-dist/target/liquibase-$version

        (cd liquibase-dist/target/liquibase-$version && tar xfz $tarFile)

        (cd liquibase-dist && $scriptDir/package-install4j.sh $version)

        mv liquibase-dist/target/liquibase-*-installer-* re-version/final


        ##Sign Files

        $PWD/.github/util/sign-artifacts.sh re-version/final


        (cd re-version/final && zip liquibase-additional-$version.zip *.asc *.md5
        *.sha1)

        rm re-version/final/*.asc

        rm re-version/final/*.md5

        rm re-version/final/*.sha1

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Attach Files to Draft Release
      uses: softprops/action-gh-release@v2
      with:
        body: Liquibase ${{ needs.setup.outputs.version }}
        draft: true
        fail_on_unmatched_files: true
        files: re-version/final/*
        generate_release_notes: true
        tag_name: v${{ needs.setup.outputs.version }}
  reversion:
    name: Re-version artifacts ${{ needs.setup.outputs.version }}
    needs:
    - setup
    - build-azure-uber-jar
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Checkout liquibase-pro
      uses: actions/checkout@v4
      with:
        path: download/repo/liquibase-pro
        ref: ${{ needs.setup.outputs.branch }}
        repository: liquibase/liquibase-pro
        token: ${{ secrets.BOT_TOKEN }}
    - continue-on-error: true
      name: Download liquibase-artifacts
      uses: liquibase/action-download-artifact@v2-liquibase
      with:
        name: liquibase-artifacts
        path: download/liquibase-artifacts
        run_id: ${{ needs.setup.outputs.runId }}
        workflow: run-tests.yml
    - continue-on-error: true
      id: get_run_id
      name: Get Current Run ID
      run: 'run_id=${{ github.run_id }}

        echo "uber_jar_runId=${run_id}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Download liquibase-pro-azure-artifacts
      uses: liquibase/action-download-artifact@v2-liquibase
      with:
        name: liquibase-pro-azure-artifacts
        path: liquibase-pro/liquibase-azure-deps
        run_id: ${{ steps.get_run_id.outputs.run_id }}
        workflow: build-azure-uber-jar.yml
    - continue-on-error: true
      env:
        GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_SECRET }}
        java-version: '8'
    - continue-on-error: true
      env:
        GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
      name: Re-version Artifacts
      run: 'scripts_branch=${{ github.ref }}

        mkdir -p $PWD/.github/util/

        # Download a script (re-version.sh) from a URL and save it to the specified
        directory

        curl -o $PWD/.github/util/re-version.sh https://raw.githubusercontent.com/liquibase/liquibase/$scripts_branch/.github/util/re-version.sh


        # Download another script (sign-artifacts.sh) from a URL and save it to the
        specified directory

        curl -o $PWD/.github/util/sign-artifacts.sh https://raw.githubusercontent.com/liquibase/liquibase/$scripts_branch/.github/util/sign-artifacts.sh

        curl -o $PWD/.github/util/ManifestReversion.java https://raw.githubusercontent.com/liquibase/liquibase/$scripts_branch/.github/util/ManifestReversion.java

        chmod +x $PWD/.github/util/re-version.sh

        chmod +x $PWD/.github/util/ManifestReversion.java

        chmod +x $PWD/.github/util/sign-artifacts.sh

        $PWD/.github/util/re-version.sh download/liquibase-artifacts "${{ needs.setup.outputs.version
        }}" "${{ needs.setup.outputs.branch }}"


        # Execute the sign-artifacts.sh script with specific arguments

        $PWD/.github/util/sign-artifacts.sh download/liquibase-artifacts "${{ needs.setup.outputs.version
        }}" "${{ needs.setup.outputs.branch }}"


        ##Sign Files

        ## liquibase-azure-deps is already on its correct version. Check reusable
        workflow: build-azure-uber-jar.yml

        mv liquibase-pro/liquibase-azure-deps/* re-version/out


        $PWD/.github/util/sign-artifacts.sh re-version/out


        # Move files to a specific directory

        mkdir re-version/final

        mv re-version/out/liquibase-core-${{ needs.setup.outputs.version }}.jar re-version/final

        mv re-version/out/liquibase-commercial-${{ needs.setup.outputs.version }}.jar
        re-version/final

        mv re-version/out/liquibase-${{ needs.setup.outputs.version }}.tar.gz re-version/final

        mv re-version/out/liquibase-${{ needs.setup.outputs.version }}.zip re-version/final

        mv re-version/out/liquibase-azure-deps-${{ needs.setup.outputs.version }}.jar
        re-version/final/liquibase-azure-deps-${{ needs.setup.outputs.version }}.jar


        (cd re-version/out/ && zip liquibase-additional-${{ needs.setup.outputs.version
        }}.zip *)

        mv re-version/out/liquibase-additional-${{ needs.setup.outputs.version }}.zip
        re-version/final

        '
    - continue-on-error: true
      name: Cache Completed Artifacts
      uses: actions/cache@v4.0.2
      with:
        key: completed-artifacts-${{ github.run_number }}-${{ github.run_attempt }}
        path: re-version/final
    - continue-on-error: true
      name: Set repository tags
      run: 'git tag -f v${{ needs.setup.outputs.version }}

        git push -f origin v${{ needs.setup.outputs.version }}

        (cd download/repo/liquibase-pro && git tag -f v${{ needs.setup.outputs.version
        }})

        (cd download/repo/liquibase-pro && git push -f origin v${{ needs.setup.outputs.version
        }})

        '
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.collect-data.outputs.branch }}
      runId: ${{ steps.collect-data.outputs.runId }}
      uber_jar_runId: ${{ steps.get_run_id.outputs.run_id }}
      version: ${{ steps.collect-data.outputs.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: collect-data
      name: Collect Data
      uses: actions/github-script@v7
      with:
        script: 'core.setOutput("version", context.payload.inputs.version);

          core.setOutput("branch", context.payload.inputs.branch || "master");

          core.setOutput("runId", context.payload.inputs.runId);

          '
    - continue-on-error: true
      run: 'echo "Creating version ${{ steps.collect-data.outputs.version }} from
        ${{ steps.collect-data.outputs.branch }} with artifacts from build ${{ steps.collect-data.outputs.runId
        }} "

        '
name: Attach Artifacts To Draft Release
on:
  repository_dispatch:
    types: trigger-ga___create-release.yml
