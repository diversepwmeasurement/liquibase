jobs:
  authorize:
    concurrency:
      cancel-in-progress: ${{ github.event_name == 'pull_request' && github.base_ref
        == 'master' }}
      group: ${{ github.workflow }}-${{ github.head_ref == 'master' && (github.event_name
        == 'push' && 'push-to-master' || github.event_name == 'pull_request' && 'merge-to-master')
        || github.event_name == 'pull_request_target' && github.event.pull_request.number
        || github.run_id }}
    environment: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name
      != github.repository && 'external' || 'internal' }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      run: true
  build_tests:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OS_TYPE: ${{ matrix.os }}
    name: Run Test for (Java ${{ matrix.java }} ${{ matrix.os }})
    needs: setup
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.event.after}}
    - continue-on-error: true
      if: ${{ matrix.java == 17}}
      name: Built Code Cache
      uses: actions/cache@v4.0.2
      with:
        key: built-code-${{ github.run_number }}-${{ github.run_attempt }}
        path: ./**/target
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v22
      with:
        repositories: "[\n  {\n    \"id\": \"liquibase\",\n    \"url\": \"https://maven.pkg.github.com/liquibase/liquibase\"\
          ,\n    \"releases\": {\n      \"enabled\": \"false\"\n    },\n    \"snapshots\"\
          : {\n      \"enabled\": \"true\",\n      \"updatePolicy\": \"always\"\n\
          \    }\n  },\n  {\n    \"id\": \"liquibase-pro\",\n    \"url\": \"https://maven.pkg.github.com/liquibase/liquibase-pro\"\
          ,\n    \"releases\": {\n      \"enabled\": \"false\"\n    },\n    \"snapshots\"\
          : {\n      \"enabled\": \"true\",\n      \"updatePolicy\": \"always\"\n\
          \    }\n  }\n]\n"
        servers: "[\n  {\n    \"id\": \"liquibase-pro\",\n    \"username\": \"liquibot\"\
          ,\n    \"password\": \"${{ secrets.LIQUIBOT_PAT }}\"\n  },\n  {\n    \"\
          id\": \"liquibase\",\n    \"username\": \"liquibot\",\n    \"password\"\
          : \"${{ secrets.LIQUIBOT_PAT }}\"\n  }\n]\n"
    - continue-on-error: true
      if: ${{ matrix.java == 8 || matrix.java == 11}}
      name: Build & Test Java below 11
      run: './mvnw -B "-Dbuild.repository.owner=liquibase" "-Dbuild.repository.name=liquibase"
        "-Dbuild.branch=${{ needs.setup.outputs.thisBranchName }}" "-Dbuild.number=${{
        github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.latestMergeSha
        }}" "-DtrimStackTrace=false" -P ''skip-integration-tests''  -pl ''!liquibase-cdi-jakarta''
        clean test package surefire-report:report

        '
    - continue-on-error: true
      if: ${{ matrix.java != 8 && matrix.java != 11}}
      name: Build & Test Java 11+
      run: './mvnw -B "-Dbuild.repository.owner=liquibase" "-Dbuild.repository.name=liquibase"
        "-Dbuild.branch=${{ needs.setup.outputs.thisBranchName }}" "-Dbuild.number=${{
        github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.latestMergeSha
        }}" "-DtrimStackTrace=false" -P ''skip-integration-tests'' clean test package
        surefire-report:report

        '
    - continue-on-error: true
      if: env.OS_TYPE != 'windows-2019'
      name: Remove Original Jars for *nix
      run: 'find . -name original-*.jar -exec rm {} \;

        '
    - continue-on-error: true
      if: ${{ matrix.java == 17 && matrix.os == 'ubuntu-20.04'}}
      name: Upload Artifacts for build.yml
      uses: actions/upload-artifact@v3
      with:
        name: temp-artifact
        path: './**/target/*.jar

          '
    - continue-on-error: true
      if: ${{ inputs.archive_test_results == 'true' }}
      name: Archive Test Results
      uses: actions/upload-artifact@v3
      with:
        name: liquibase-test-results-jdk${{ matrix.java }}
        path: './**/target/surefire-reports

          ./**/target/site

          '
    - continue-on-error: true
      if: ${{ matrix.java == 17 && matrix.os == 'ubuntu-20.04'}}
      name: Save Jacoco Report for Sonar
      uses: actions/upload-artifact@v3
      with:
        name: liquibase-jacoco-test-results
        path: './liquibase-standard/target/jacoco.exec

          '
    - continue-on-error: true
      if: ${{ matrix.java == 17 && matrix.os == 'ubuntu-20.04'}}
      name: Archive Modules
      uses: actions/upload-artifact@v3
      with:
        name: liquibase-modules
        path: '*/target/*-0-SNAPSHOT.jar

          '
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - java: 11
          os: macos-13
        - java: 11
          os: windows-2019
        - java: 17
          os: macos-13
        - java: 17
          os: windows-2019
        - java: 21
          os: macos-13
        - java: 21
          os: windows-2019
        java:
        - 8
        - 11
        - 17
        - 21
        os:
        - ubuntu-20.04
        - macos-13
        - windows-2019
  integration-test:
    name: Integration Test
    needs: build_tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.event.after}}
    - continue-on-error: true
      id: prepare
      name: Prepare
      uses: actions/github-script@v7
      with:
        script: 'core.setOutput("testResultsArtifact", "liquibase-test-results-integration-${{
          matrix.testSystem }}".replace(/[^a-zA-Z0-9\-_]/g, "_"));

          '
    - continue-on-error: true
      if: ${{ matrix.testSystem != 'snowflake' }}
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      if: ${{ matrix.testSystem == 'snowflake' }}
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '11'
    - continue-on-error: true
      name: Restore Built Code Cache
      uses: actions/cache@v4.0.2
      with:
        key: built-code-${{ github.run_number }}-${{ github.run_attempt }}
        path: ./**/target
    - continue-on-error: true
      if: ${{ matrix.testSystem == 'snowflake' }}
      name: Setup Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: 3.12.1
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }}
      if: ${{ matrix.testSystem == 'snowflake' }}
      name: Start & Configure LocalStack
      run: "pip install localstack awscli-local\nDEBUG=1 DOCKER_FLAGS='-e SF_LOG=trace'\
        \ IMAGE_NAME=localstack/snowflake localstack start -d\necho \"Waiting for\
        \ LocalStack startup...\"\nlocalstack wait -t 30\necho \"Startup complete\"\
        \necho \"TH_DB_ADMIN=test\" >> $GITHUB_ENV  \necho \"TH_DB_PASSWD=test\" >>\
        \ $GITHUB_ENV\necho \"TH_DB=snowflake\" >> $GITHUB_ENV\necho \"TH_SNOW_URL=jdbc:snowflake://http://snowflake.localhost.localstack.cloud:4566\"\
        \ >> $GITHUB_ENV\n"
    - continue-on-error: true
      name: Run Tests
      run: ./mvnw -B clean verify -DtrimStackTrace=false -Dliquibase.sdk.testSystem.test=${{
        matrix.testSystem }} -Dliquibase.sdk.testSystem.acceptLicenses=${{ matrix.testSystem
        }} -Dliquibase.sdk.testSystem.snowflake.url=${{ env.TH_SNOW_URL }} -Dliquibase.sdk.testSystem.snowflake.username=${{
        env.TH_DB_ADMIN }} -Dliquibase.sdk.testSystem.snowflake.password=${{ env.TH_DB_PASSWD
        }} -Dtest=*IntegrationTest,*ExecutorTest -DfailIfNoTests=false -Dsurefire.failIfNoSpecifiedTests=false
        -Dsurefire.failIfNoTests=false
    - continue-on-error: true
      if: ${{ inputs.archive_test_results == 'true' }}
      name: Archive Test Results
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepare.outputs.testResultsArtifact }}
        path: './**/target/surefire-reports

          '
    - continue-on-error: true
      name: Save Jacoco Report for Sonar
      uses: actions/upload-artifact@v3
      with:
        name: liquibase-integration-jacoco-test-results-${{ matrix.testSystem }}
        path: './liquibase-integration-tests/target/jacoco.exec

          '
    strategy:
      fail-fast: false
      matrix:
        testSystem:
        - db2
        - h2
        - hsqldb
        - mariadb
        - mssql
        - mysql
        - oracle
        - postgresql
        - sqlite
        - firebird
    timeout-minutes: 30
  run-build-publish-file:
    needs:
    - build_tests
    - integration-test
    secrets: inherit
    uses: liquibase/liquibase/.github/workflows/build.yml@master
  setup:
    name: setup
    needs: authorize
    outputs:
      latestMergeSha: ${{ steps.get-sha.outputs.latestMergeSha }}
      setupSuccessful: 'true'
      thisBranchName: ${{ steps.get-branch-name.outputs.thisBranchName }}
      timestamp: ${{ steps.get-date.outputs.date }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - continue-on-error: true
      id: get-date
      name: Get current date
      run: 'echo "date=$(date +''%Y-%m-%d %H:%M:%S %Z'')" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: get-sha
      name: Get Latest Merge Commit SHA
      run: 'latest_merge_sha=`(git rev-parse HEAD)`

        echo "latestMergeSha=${latest_merge_sha}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: get-branch-name
      name: Get Current BranchName
      run: "# this logic checks if the branch is from a forked repository PR or not.\
        \ Where -n is the inverse of -z (not empty)\nif [ -n \"${GITHUB_HEAD_REF}\"\
        \ ];\nthen\n  branch_name=${GITHUB_HEAD_REF}\nelse\n  branch_name=${{ github.ref_name\
        \ }}\nfi \n\nmodified_branch_name=`(echo $branch_name | tr '/_' '-')`\necho\
        \ \"thisBranchName=$modified_branch_name\" >> $GITHUB_OUTPUT          \necho\
        \ $modified_branch_name\n"
  sonar:
    needs:
    - build_tests
    - integration-test
    secrets: inherit
    uses: liquibase/build-logic/.github/workflows/sonar-test-scan.yml@v0.7.8
    with:
      dbPlatforms: h2,hsqldb,mariadb,mssql,mysql,oracle,postgresql,sqlite,firebird,db2
      liquibaseBranchName: ${{ needs.setup.outputs.liquibaseBranchName }}
      pullRequestBaseBranchName: ${{ github.event.pull_request.base.ref }}
      pullRequestBranchName: ${{ github.event.pull_request.head.ref }}
      pullRequestNumber: ${{ github.event.pull_request.number }}
      testedClassesModuleName: liquibase-standard
      thisBranchName: ${{ needs.setup.outputs.thisBranchName }}
      thisSha: ${{ needs.setup.outputs.thisSha }}
name: Run Tests
on:
  repository_dispatch:
    types: trigger-ga___run-tests.yml
