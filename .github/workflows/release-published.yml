env:
  MAVEN_VERSION: 3.9.2
jobs:
  deploy_javadocs:
    name: Upload Javadocs
    needs:
    - setup
    - manual_trigger_deployment
    permissions:
      contents: read
      id-token: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download release javadocs
      uses: robinraju/release-downloader@v1.10
      with:
        filename: liquibase-additional*.zip
        out-file-path: .
        repository: liquibase/liquibase
        tag: ${{ needs.setup.outputs.tag }}
    - continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.JAVADOCS_ACCESS_KEY_ID }}
        AWS_DEFAULT_REGION: us-east-1
        AWS_SECRET_ACCESS_KEY: ${{ secrets.JAVADOCS_SECRET_ACCESS_KEY }}
      name: Unpack javadoc files and upload to s3
      run: "unzip -j '*.zip' '*javadoc*.jar' \n\nfor jar in *liquibase*.jar; do\n\
        \  dir_name=$(basename \"$jar\" .jar)\n  dir_name=$(echo \"$dir_name\" | sed\
        \ -E 's/(-[0-9]+(\\.[0-9]+)*(-javadoc)?)//')\n  mkdir -p \"$dir_name\"\n \
        \ unzip -o \"$jar\" -d \"$dir_name\"\ndone\n\nrm -rf *.jar *.zip\naws s3 sync\
        \ . s3://javadocsliquibasecom-origin --only-show-errors\n"
  deploy_maven:
    name: Deploy to Maven
    needs:
    - setup
    - manual_trigger_deployment
    - deploy_javadocs
    - publish_to_github_packages
    - deploy_xsd
    - release-docker
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download release assets
      uses: robinraju/release-downloader@v1.10
      with:
        filename: '*'
        out-file-path: .
        repository: liquibase/liquibase
        tag: ${{ needs.setup.outputs.tag }}
    - continue-on-error: true
      env:
        GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
      name: Set up Java for publishing to Maven Central Repository
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_SECRET }}
        java-version: '11'
        server-id: sonatype-nexus-staging
        server-password: MAVEN_PASSWORD
        server-username: MAVEN_USERNAME
    - continue-on-error: true
      env:
        GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
        MAVEN_PASSWORD: ${{ secrets.SONATYPE_TOKEN }}
        MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      name: Publish to Maven Central
      run: "version=${{ needs.setup.outputs.version }}\n\nunzip -j liquibase-additional-*.zip\n\
        \n##extracts and sign poms\nunzip -j liquibase-core-${version}.jar META-INF/maven/org.liquibase/liquibase-core/pom.xml\n\
        sed -i -e \"s/<version>release-SNAPSHOT<\\/version>/<version>${version}<\\\
        /version>/\" pom.xml ## version didn't end up in pom. So using double quotes\n\
        mv pom.xml liquibase-core-${version}.pom\ngpg --batch --pinentry-mode=loopback\
        \ --passphrase \"$GPG_PASSWORD\" -ab liquibase-core-${version}.pom\n\nunzip\
        \ -j liquibase-maven-plugin-${version}.jar META-INF/maven/org.liquibase/liquibase-maven-plugin/pom.xml\n\
        sed -i -e \"s/<version>release-SNAPSHOT<\\/version>/<version>${version}<\\\
        /version>/\" pom.xml\nmv pom.xml liquibase-maven-plugin-${version}.pom\ngpg\
        \ --batch --pinentry-mode=loopback --passphrase \"$GPG_PASSWORD\" -ab liquibase-maven-plugin-${version}.pom\n\
        \nunzip -j liquibase-cdi-${version}.jar META-INF/maven/org.liquibase/liquibase-cdi/pom.xml\n\
        sed -i -e \"s/<version>release-SNAPSHOT<\\/version>/<version>${version}<\\\
        /version>/\" pom.xml\nmv pom.xml liquibase-cdi-${version}.pom\nsed -i -e \"\
        s/<description>/<name>Liquibase CDI Plugin<\\/name><description>/\" liquibase-cdi-${version}.pom\
        \   ## name didn't end up in pom. Hack it in for now\ngpg --batch --pinentry-mode=loopback\
        \ --passphrase \"$GPG_PASSWORD\" -ab liquibase-cdi-${version}.pom\n\nunzip\
        \ -j liquibase-cdi-jakarta-${version}.jar META-INF/maven/org.liquibase/liquibase-cdi-jakarta/pom.xml\n\
        sed -i -e \"s/<version>release-SNAPSHOT<\\/version>/<version>${version}<\\\
        /version>/\" pom.xml\nmv pom.xml liquibase-cdi-jakarta-${version}.pom\nsed\
        \ -i -e \"s/<description>/<name>Liquibase cdi-jakarta Plugin<\\/name><description>/\"\
        \ liquibase-cdi-jakarta-${version}.pom   ## name didn't end up in pom. Hack\
        \ it in for now\ngpg --batch --pinentry-mode=loopback --passphrase \"$GPG_PASSWORD\"\
        \ -ab liquibase-cdi-jakarta-${version}.pom\n\nunzip -j liquibase-commercial-${version}.jar\
        \ META-INF/maven/org.liquibase/liquibase-commercial/pom.xml\nsed -i -e \"\
        s/<version>release-SNAPSHOT<\\/version>/<version>${version}<\\/version>/\"\
        \ pom.xml\nmv pom.xml liquibase-commercial-${version}.pom\nsed -i -e \"s/<\\\
        /licenses>/<\\/licenses><scm><connection>private<\\/connection><developerConnection>private<\\\
        /developerConnection><url>private<\\/url><\\/scm>/\" liquibase-commercial-${version}.pom\
        \   ## scm info not in the pom          \ngpg --batch --pinentry-mode=loopback\
        \ --passphrase \"$GPG_PASSWORD\" -ab liquibase-commercial-${version}.pom\n\
        \nmvn -B org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file\
        \ \\\n  -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/\
        \ \\\n  -DrepositoryId=sonatype-nexus-staging \\\n  -DpomFile=liquibase-core-${version}.pom\
        \ \\\n  -DgeneratePom=false \\\n  -Dfile=liquibase-core-${version}.jar \\\n\
        \  -Dsources=liquibase-core-${version}-sources.jar \\\n  -Djavadoc=liquibase-core-${version}-javadoc.jar\
        \ \\\n  -Dfiles=liquibase-core-${version}.jar.asc,liquibase-core-${version}-sources.jar.asc,liquibase-core-${version}-javadoc.jar.asc,liquibase-core-${version}.pom.asc\
        \ \\\n  -Dtypes=jar.asc,jar.asc,jar.asc,pom.asc \\\n  -Dclassifiers=,sources,javadoc,\n\
        \nmvn -B org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file\
        \ \\\n  -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/\
        \ \\\n  -DrepositoryId=sonatype-nexus-staging \\\n  -DpomFile=liquibase-commercial-${version}.pom\
        \ \\\n  -DgeneratePom=false \\\n  -Dfile=liquibase-commercial-${version}.jar\
        \ \\\n  -Dsources=liquibase-commercial-${version}-sources.jar \\\n  -Djavadoc=liquibase-commercial-${version}-javadoc.jar\
        \ \\\n  -Dfiles=liquibase-commercial-${version}.jar.asc,liquibase-commercial-${version}-sources.jar.asc,liquibase-commercial-${version}-javadoc.jar.asc,liquibase-commercial-${version}.pom.asc\
        \ \\\n  -Dtypes=jar.asc,jar.asc,jar.asc,pom.asc \\\n  -Dclassifiers=,sources,javadoc,\n\
        \nmvn -B org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file\
        \ \\\n  -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/\
        \ \\\n  -DrepositoryId=sonatype-nexus-staging \\\n  -DpomFile=liquibase-maven-plugin-${version}.pom\
        \ \\\n  -DgeneratePom=false \\\n  -Dfile=liquibase-maven-plugin-${version}.jar\
        \ \\\n  -Dsources=liquibase-maven-plugin-${version}-sources.jar \\\n  -Djavadoc=liquibase-maven-plugin-${version}-javadoc.jar\
        \ \\\n  -Dfiles=liquibase-maven-plugin-${version}.jar.asc,liquibase-maven-plugin-${version}-sources.jar.asc,liquibase-maven-plugin-${version}-javadoc.jar.asc,liquibase-maven-plugin-${version}.pom.asc\
        \ \\\n  -Dtypes=jar.asc,jar.asc,jar.asc,pom.asc \\\n  -Dclassifiers=,sources,javadoc,\n\
        \nmvn -B org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file\
        \ \\\n  -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/\
        \ \\\n  -DrepositoryId=sonatype-nexus-staging \\\n  -DpomFile=liquibase-cdi-${version}.pom\
        \ \\\n  -DgeneratePom=false \\\n  -Dfile=liquibase-cdi-${version}.jar \\\n\
        \  -Dsources=liquibase-cdi-${version}-sources.jar \\\n  -Djavadoc=liquibase-cdi-${version}-javadoc.jar\
        \ \\\n  -Dfiles=liquibase-cdi-${version}.jar.asc,liquibase-cdi-${version}-sources.jar.asc,liquibase-cdi-${version}-javadoc.jar.asc,liquibase-cdi-${version}.pom.asc\
        \ \\\n  -Dtypes=jar.asc,jar.asc,jar.asc,pom.asc \\\n  -Dclassifiers=,sources,javadoc,\n\
        \nmvn -B org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file\
        \ \\\n  -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/\
        \ \\\n  -DrepositoryId=sonatype-nexus-staging \\\n  -DpomFile=liquibase-cdi-jakarta-${version}.pom\
        \ \\\n  -DgeneratePom=false \\\n  -Dfile=liquibase-cdi-jakarta-${version}.jar\
        \ \\\n  -Dsources=liquibase-cdi-jakarta-${version}-sources.jar \\\n  -Djavadoc=liquibase-cdi-jakarta-${version}-javadoc.jar\
        \ \\\n  -Dfiles=liquibase-cdi-jakarta-${version}.jar.asc,liquibase-cdi-jakarta-${version}-sources.jar.asc,liquibase-cdi-jakarta-${version}-javadoc.jar.asc,liquibase-cdi-jakarta-${version}.pom.asc\
        \ \\\n  -Dtypes=jar.asc,jar.asc,jar.asc,pom.asc \\\n  -Dclassifiers=,sources,javadoc,\n\
        \n## Release repository\n## Have to find the stagingRepositoryId that was\
        \ auto-generated\nrcList=$(mvn -B org.sonatype.plugins:nexus-staging-maven-plugin:1.6.8:rc-list\
        \ -DnexusUrl=https://oss.sonatype.org/ -DserverId=sonatype-nexus-staging)\n\
        #echo $rcList\n\nstagingRepositoryId=$(echo $rcList | grep -o \"\\[INFO\\\
        ] orgliquibase-[0-9]*[ ]*OPEN\" | grep -o \"orgliquibase-[0-9]*\")\necho \"\
        Staging Repository Id: $stagingRepositoryId\"\n\nif [ \"$(echo $stagingRepositoryId\
        \ | grep -o \"\\-\" | wc -l)\" != \"1\" ]; then\n  echo \"Did not find exactly\
        \ one open repository\"\n  exit 1\nfi\n\nmvn org.sonatype.plugins:nexus-staging-maven-plugin:1.6.8:rc-close\
        \ \\\n  -DnexusUrl=https://oss.sonatype.org/ \\\n  -DserverId=sonatype-nexus-staging\
        \ \\\n  -DstagingRepositoryId=$stagingRepositoryId \\\n  -DstagingProgressTimeoutMinutes=10\n\
        \nmvn org.sonatype.plugins:nexus-staging-maven-plugin:1.6.8:rc-release \\\n\
        \  -DautoDropAfterRelease=true \\\n  -DnexusUrl=https://oss.sonatype.org/\
        \ \\\n  -DserverId=sonatype-nexus-staging \\\n  -DstagingRepositoryId=$stagingRepositoryId\
        \ \\\n  -DstagingProgressTimeoutMinutes=10\n"
  deploy_xsd:
    name: Upload xsds
    needs:
    - setup
    - manual_trigger_deployment
    outputs:
      tag: ${{ steps.collect-data.outputs.tag }}
      version: ${{ needs.setup.outputs.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download liquibase xsd
      uses: actions/checkout@v4
      with:
        path: liquibase-core-repo
        repository: liquibase/liquibase
    - continue-on-error: true
      name: Download liquibase-pro xsd
      uses: actions/checkout@v4
      with:
        path: liquibase-pro-repo
        ref: release
        repository: liquibase/liquibase-pro
        token: ${{ secrets.BOT_TOKEN }}
    - continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LIQUIBASEORIGIN_ACCESS_KEY_ID }}
        AWS_DEFAULT_REGION: us-east-1
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LIQUIBASEORIGIN_SECRET_ACCESS_KEY }}
      name: Upload to s3
      run: 'aws s3 sync liquibase-pro-repo/pro/src/main/resources/www.liquibase.org/xml/ns/pro/
        s3://liquibaseorg-origin/xml/ns/pro/ --content-type application/octet-stream
        --only-show-errors

        aws s3 sync liquibase-core-repo/liquibase-standard/src/main/resources/www.liquibase.org/xml/ns/dbchangelog/
        s3://liquibaseorg-origin/xml/ns/dbchangelog/ --content-type application/octet-stream
        --only-show-errors

        aws s3 sync liquibase-pro-repo/pro/src/main/resources/schemas/ s3://liquibaseorg-origin/json/schema/
        --content-type application/octet-stream --only-show-errors

        '
    - continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LIQUIBASEORIGIN_ACCESS_KEY_ID }}
        AWS_DEFAULT_REGION: us-east-1
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LIQUIBASEORIGIN_SECRET_ACCESS_KEY }}
      name: Index.htm file upload
      run: "version=${{ needs.setup.outputs.version }}\narr=(${version//./ })\nxsd_version=${arr[0]}\"\
        .\"${arr[1]}\nmkdir index-file\naws s3 cp s3://liquibaseorg-origin/xml/ns/dbchangelog/index.htm\
        \ index-file\nif ! grep -q ${xsd_version} index-file/index.htm ; then\n  sed\
        \ -ie \"s/<\\/ul>/  <li><a href=\\\"\\/xml\\/ns\\/dbchangelog\\/dbchangelog-${xsd_version}.xsd\\\
        \">dbchangelog-${xsd_version}.xsd<\\/a><\\/li>\\n<\\/ul>/\" index-file/index.htm\n\
        \  aws s3 sync index-file s3://liquibaseorg-origin/xml/ns/dbchangelog/ --only-show-errors\n\
        fi\n"
    - continue-on-error: true
      name: Liquibase xsds SFTP upload
      uses: wangyucode/sftp-upload-action@v2.0.2
      with:
        compress: true
        forceUpload: true
        host: ${{ secrets.WPENGINE_SFTP_HOST }}
        localDir: liquibase-core-repo/liquibase-standard/src/main/resources/www.liquibase.org/xml/ns/dbchangelog/
        password: ${{ secrets.WPENGINE_SFTP_PASSWORD }}
        port: ${{ secrets.WPENGINE_SFTP_PORT }}
        remoteDir: /xml/ns/dbchangelog/
        username: ${{ secrets.WPENGINE_SFTP_USER }}
    - continue-on-error: true
      name: Liquibase PRO xsds SFTP upload
      uses: wangyucode/sftp-upload-action@v2.0.2
      with:
        compress: false
        forceUpload: true
        host: ${{ secrets.WPENGINE_SFTP_HOST }}
        localDir: liquibase-pro-repo/pro/src/main/resources/www.liquibase.org/xml/ns/pro/
        password: ${{ secrets.WPENGINE_SFTP_PASSWORD }}
        port: ${{ secrets.WPENGINE_SFTP_PORT }}
        remoteDir: /xml/ns/pro/
        username: ${{ secrets.WPENGINE_SFTP_USER }}
    - continue-on-error: true
      name: Liquibase flow-file schema SFTP upload
      uses: wangyucode/sftp-upload-action@v2.0.2
      with:
        compress: false
        forceUpload: true
        host: ${{ secrets.WPENGINE_SFTP_HOST }}
        localDir: liquibase-pro-repo/pro/src/main/resources/schemas/
        password: ${{ secrets.WPENGINE_SFTP_PASSWORD }}
        port: ${{ secrets.WPENGINE_SFTP_PORT }}
        remoteDir: /json/schema/
        username: ${{ secrets.WPENGINE_SFTP_USER }}
    - continue-on-error: true
      name: Liquibase index.htm SFTP upload
      uses: wangyucode/sftp-upload-action@v2.0.2
      with:
        compress: false
        forceUpload: true
        host: ${{ secrets.WPENGINE_SFTP_HOST }}
        localDir: index-file/
        password: ${{ secrets.WPENGINE_SFTP_PASSWORD }}
        port: ${{ secrets.WPENGINE_SFTP_PORT }}
        remoteDir: /xml/ns/dbchangelog/
        username: ${{ secrets.WPENGINE_SFTP_USER }}
  generate-PRO-tag:
    name: Generate PRO tags based on OSS release
    needs:
    - setup
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v3
      with:
        event-type: oss-released-tag
        repository: liquibase/liquibase-pro
        token: ${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}
  manual_trigger_deployment:
    name: Manually trigger deployment
    needs:
    - setup
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Get Version to deploy
      uses: trstringer/manual-approval@v1
      with:
        additional-approved-words: "lgtm,\u2705,\U0001F44D,proceed,shipit,:shipit:"
        additional-denied-words: "stop,error,failed,fail,broken,:x:,\U0001F44E"
        approvers: suryaaki2,rberezen,jnewton03,kristyldatical,sayaliM0412
        issue-body: Please approve or deny the deployment of version ${{ needs.setup.outputs.version
          }}
        issue-title: Deploying ${{ needs.setup.outputs.version }} to sonatype
        minimum-approvals: 2
        secret: ${{ secrets.GITHUB_TOKEN }}
  package:
    needs:
    - setup
    secrets: inherit
    uses: liquibase/build-logic/.github/workflows/package.yml@v0.7.8
    with:
      artifactId: liquibase
      groupId: org.liquibase
      version: ${{ needs.setup.outputs.version }}
  publish_to_github_packages:
    name: Publish artifacts to Github Packages
    needs:
    - setup
    - manual_trigger_deployment
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up Java for publishing to GitHub Repository
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
        server-id: liquibase
    - continue-on-error: true
      name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ env.MAVEN_VERSION }}
    - continue-on-error: true
      name: Version artifact
      run: mvn versions:set -DnewVersion="${{ needs.setup.outputs.version }}"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TARGET_ARTIFACT_REPOSITORY: liquibase
      name: Publish package to Github
      run: mvn -B clean deploy -DskipTests=true
  release-docker:
    name: Release docker images
    needs:
    - setup
    - manual_trigger_deployment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Release liquibase/docker v${{ needs.setup.outputs.version }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.BOT_TOKEN }}
        script: "console.log(\"Sending liquibase-release event to liquibase/docker\"\
          );\n\nawait github.rest.repos.createDispatchEvent({\n   \"owner\": \"liquibase\"\
          ,\n   \"repo\": \"docker\",\n   \"event_type\": \"liquibase-release\",\n\
          \   \"client_payload\": {\n      \"liquibaseVersion\": \"${{ needs.setup.outputs.version\
          \ }}\"\n    }\n });\n"
  setup:
    name: Setup
    outputs:
      tag: ${{ steps.collect-data.outputs.tag }}
      version: ${{ steps.collect-data.outputs.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: collect-data
      name: Collect Data
      uses: actions/github-script@v7
      with:
        script: "let tag;\nif (context.payload.inputs) {\n  tag = context.payload.inputs.tag;\n\
          } else {\n  tag = context.payload.release.tag_name;\n}\n\nlet version =\
          \ tag.replace(/^v/, \"\");\n\ncore.setOutput(\"tag\", tag);\ncore.setOutput(\"\
          version\", version);\n"
    - continue-on-error: true
      run: 'echo "Publishing version ${{ steps.collect-data.outputs.version }} from
        ${{ steps.collect-data.outputs.tag }}"

        '
name: Release Published
on:
  repository_dispatch:
    types: trigger-ga___release-published.yml
