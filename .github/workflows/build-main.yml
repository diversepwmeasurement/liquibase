jobs:
  build-and-publish:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    name: Build & Publish
    needs: setup
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up Java for publishing to GitHub Repository
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
        server-id: liquibase
    - continue-on-error: true
      name: Version Artifact as master-SNAPSHOT
      run: ./mvnw versions:set "-DnewVersion=master-SNAPSHOT"
    - continue-on-error: true
      name: Publish master-SNAPSHOT
      run: ./mvnw -B clean deploy -pl '!liquibase-dist' -DskipTests=true "-Dbuild.repository.owner=liquibase"
        "-Dbuild.repository.name=liquibase" "-Dbuild.branch=master" "-Dbuild.number=${{
        github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.latestMergeSha
        }}" "-Dbuild.timestamp=${{ needs.setup.outputs.timeStamp }}"
    - continue-on-error: true
      name: Version Artifact as commit-SNAPSHOT
      run: ./mvnw versions:set -DnewVersion="${{ needs.setup.outputs.latestMergeSha
        }}-SNAPSHOT"
    - continue-on-error: true
      name: Publish commit-SNAPSHOT
      run: ./mvnw -B clean deploy -pl '!liquibase-dist' -DskipTests=true "-Dbuild.repository.owner=liquibase"
        "-Dbuild.repository.name=liquibase" "-Dbuild.branch=master" "-Dbuild.number=${{
        github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.latestMergeSha
        }}" "-Dbuild.timestamp=${{ needs.setup.outputs.timeStamp }}"
  setup:
    name: Setup
    outputs:
      latestMergeSha: ${{ steps.get-sha.outputs.latestMergeSha }}
      setupSuccessful: 'true'
      timeStamp: ${{ steps.get-timestamp.outputs.timeStamp }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: get-sha
      name: Get Latest Merge Commit SHA
      run: 'latest_merge_sha=`(git rev-parse --short HEAD)`

        echo "latestMergeSha=${latest_merge_sha}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: get-timestamp
      name: Get Timestamp
      run: 'timestamp=`(date +''%Y-%m-%d %H:%M:%S %Z'')`

        echo "timeStamp=${timestamp}" >> $GITHUB_OUTPUT

        '
name: Build Main/Master SNAPSHOT
on:
  repository_dispatch:
    types: trigger-ga___build-main.yml
