jobs:
  fossa-scan:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v22
      with:
        repositories: "[\n  {\n    \"id\": \"liquibase\",\n    \"url\": \"https://maven.pkg.github.com/liquibase/liquibase\"\
          ,\n    \"releases\": {\n      \"enabled\": \"false\"\n    },\n    \"snapshots\"\
          : {\n      \"enabled\": \"true\",\n      \"updatePolicy\": \"always\"\n\
          \    }\n  },\n  {\n    \"id\": \"liquibase-pro\",\n    \"url\": \"https://maven.pkg.github.com/liquibase/liquibase-pro\"\
          ,\n    \"releases\": {\n      \"enabled\": \"false\"\n    },\n    \"snapshots\"\
          : {\n      \"enabled\": \"true\",\n      \"updatePolicy\": \"always\"\n\
          \    }\n  }\n]\n"
        servers: "[\n  {\n    \"id\": \"liquibase-pro\",\n    \"username\": \"liquibot\"\
          ,\n    \"password\": \"${{ secrets.LIQUIBOT_PAT }}\"\n  },\n  {\n    \"\
          id\": \"liquibase\",\n    \"username\": \"liquibot\",\n    \"password\"\
          : \"${{ secrets.LIQUIBOT_PAT }}\"\n  }\n]\n"
    - continue-on-error: true
      name: Install Maven dependencies (excluding test scope)
      run: mvn clean install -DskipTests
    - continue-on-error: true
      name: run FOSSA CLI
      uses: fossas/fossa-action@main
      with:
        api-key: ${{ secrets.FOSSA_API_KEY }}
        branch: ${{ github.ref }}
    - continue-on-error: true
      id: get_commit_sha_oss
      name: Get the commit sha
      run: 'commit_sha_lb=`(git rev-parse HEAD)`

        echo "commit_sha_lb=${commit_sha_lb}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Set the dependency metadata information
      run: "mkdir /home/runner/fossa_reports\ncurl --location --request PUT 'https://app.fossa.com/api/projects/git+github.com/liquibase/liquibase'\
        \ \\\n--header 'Authorization: Bearer ${{ secrets.FOSSA_API_KEY }}' \\\n--header\
        \ 'Content-Type: application/x-www-form-urlencoded' \\\n  --data-urlencode\
        \ 'bom_column_settings%5B%5D=Title' \\\n  --data-urlencode 'bom_column_settings%5B%5D=Version'\
        \ \\\n  --data-urlencode 'bom_column_settings%5B%5D=Authors' \\\n  --data-urlencode\
        \ 'bom_column_settings%5B%5D=DeclaredLicense' \\\n  --data-urlencode 'bom_column_settings%5B%5D=PackageHomepage'\
        \ \\\n\n\ncurl --location 'https://app.fossa.com/api/revisions/git%2Bgithub.com%2Fliquibase%2Fliquibase%24${{\
        \ steps.get_commit_sha_oss.outputs.commit_sha_lb }}/attribution/download?format=CSV&includeDeepDependencies=true&download=true'\
        \ \\\n--header 'Authorization: Bearer ${{ secrets.FOSSA_API_KEY }}' -o /home/runner/fossa_reports/liquibase.csv\n"
    - continue-on-error: true
      name: Upload to build page
      uses: actions/upload-artifact@v2
      with:
        name: fossa-reports
        path: /home/runner/fossa_reports/liquibase.csv
    - continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LIQUIBASEORIGIN_ACCESS_KEY_ID }}
        AWS_DEFAULT_REGION: us-east-1
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LIQUIBASEORIGIN_SECRET_ACCESS_KEY }}
      if: always()
      name: Upload report to S3
      run: aws s3 cp /home/runner/fossa_reports/liquibase.csv s3://liquibaseorg-origin/fossa_reports_liquibase-pro/
  run-pro-fossa-report:
    needs:
    - fossa-scan
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Dispatch event to PRO repository
      uses: peter-evans/repository-dispatch@v3
      with:
        client-payload: '{"repository": "${{ github.repository }}", "branch": "${{
          github.ref }}", "sha": "${{ github.sha }}", "server_url": "${{ github.server_url
          }}", "run_id": "${{ github.run_id }}"}'
        event-type: FOSSA_Scan_PRO
        repository: liquibase/liquibase-pro
        token: ${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}
name: FOSSA License Compliance and Security Check
on:
  repository_dispatch:
    types: trigger-ga___fossa.yml
