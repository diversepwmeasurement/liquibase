concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.head_ref == 'master' && 'master' || github.run_id
    }}
jobs:
  build_publish_branch:
    name: Artifacts- Build & Package
    needs:
    - setup
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.event.after}}
    - continue-on-error: true
      name: Download Artifacts for build.yml
      uses: actions/download-artifact@v3
      with:
        name: temp-artifact
    - continue-on-error: true
      name: Install4j Cache
      uses: actions/cache@v4.0.2
      with:
        key: install4j-A${{ hashFiles('liquibase-dist/src/main/install4j/liquibase.install4j')
          }}
        path: ~/.install4j8/**
    - continue-on-error: true
      env:
        GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_SECRET }}
        java-version: '11'
        overwrite-settings: false
    - continue-on-error: true
      name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v22
      with:
        repositories: "[\n  {\n    \"id\": \"liquibase\",\n    \"url\": \"https://maven.pkg.github.com/liquibase/liquibase\"\
          ,\n    \"releases\": {\n      \"enabled\": \"false\"\n    },\n    \"snapshots\"\
          : {\n      \"enabled\": \"true\",\n      \"updatePolicy\": \"always\"\n\
          \    }\n  },\n  {\n    \"id\": \"liquibase-pro\",\n    \"url\": \"https://maven.pkg.github.com/liquibase/liquibase-pro\"\
          ,\n    \"releases\": {\n      \"enabled\": \"false\"\n    },\n    \"snapshots\"\
          : {\n      \"enabled\": \"true\",\n      \"updatePolicy\": \"always\"\n\
          \    }\n  }\n]\n"
        servers: "[\n  {\n    \"id\": \"liquibase-pro\",\n    \"username\": \"liquibot\"\
          ,\n    \"password\": \"${{ secrets.LIQUIBOT_PAT }}\"\n  },\n  {\n    \"\
          id\": \"liquibase\",\n    \"username\": \"liquibot\",\n    \"password\"\
          : \"${{ secrets.LIQUIBOT_PAT }}\"\n  }\n]\n"
    - continue-on-error: true
      name: Version Artifact
      run: 'version=${{ needs.setup.outputs.thisBranchName }}-SNAPSHOT

        ./mvnw versions:set -DnewVersion="$version"

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
        INSTALL4J_APPLE_ID: ${{ secrets.INSTALL4J_APPLE_ID }}
        INSTALL4J_APPLE_ID_PASSWORD: ${{ secrets.INSTALL4J_APPLE_ID_PASSWORD }}
        INSTALL4J_APPLE_KEY: ${{ secrets.INSTALL4J_APPLE_KEY }}
        INSTALL4J_APPLE_KEY_PASSWORD: ${{ secrets.INSTALL4J_APPLE_KEY_PASSWORD }}
        INSTALL4J_LICENSE: ${{ secrets.INSTALL4J_LICENSE }}
        INSTALL4J_WINDOWS_KEY: ${{ secrets.INSTALL4J_WINDOWS_KEY }}
        INSTALL4J_WINDOWS_KEY_PASSWORD: ${{ secrets.INSTALL4J_WINDOWS_KEY_PASSWORD
          }}
      name: Artifacts- Build & Sign
      run: "## save install4j code signing keys\nmkdir -p liquibase-dist/target/keys\n\
        echo \"Saving apple key\"\necho \"$INSTALL4J_APPLE_KEY\" | base64 -d > liquibase-dist/target/keys/datical_apple.p12\n\
        \necho \"Saving windows key\"\necho \"$INSTALL4J_WINDOWS_KEY\" | base64 -d\
        \ > liquibase-dist/target/keys/datical_windows.pfx\n# we are packaging and\
        \ deploying liquibase tar which includes liquibase-commercial\n./mvnw -B -pl\
        \ liquibase-dist -P liquibase-commercial source:jar package \"-Dliquibase.scripting=true\"\
        \ \"-Dliquibase-pro.version=${{ needs.setup.outputs.proBranchNamePrefix }}-SNAPSHOT\"\
        \ \"-Dbuild.repository.owner=liquibase\" \"-Dbuild.repository.name=liquibase\"\
        \ \"-Dbuild.branch=${{ needs.setup.outputs.thisBranchName }}\" \"-Dbuild.number=${{\
        \ github.run_number }}\" \"-Dbuild.commit=${{ needs.setup.outputs.latestMergeSha\
        \ }}-SNAPSHOT\" \"-Dbuild.timestamp=${{ needs.setup.outputs.timeStamp }}\"\
        \n\n## extract tar content for other artifacts\nmkdir -p liquibase-dist/target/liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT\n\n(cd liquibase-dist/target/liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT && tar -xzf ../liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT.tar.gz) \n\n# there is some\
        \ issue while doing a tar -xzf hence copying this manually\ncp -r liquibase-standard/src/main/resources/liquibase/examples\
        \ liquibase-dist/target/liquibase-${{ needs.setup.outputs.thisBranchName }}-SNAPSHOT\n\
        \nls -l liquibase-dist/target\n#zip the above folder again which contains\
        \ examples folder\n(cd liquibase-dist/target && tar -czf liquibase-${{ needs.setup.outputs.thisBranchName\
        \ }}-SNAPSHOT.tar.gz liquibase-${{ needs.setup.outputs.thisBranchName }}-SNAPSHOT)\
        \  \n\n## verify that the contents of the tar matches the expectation\necho\
        \ \"Comparing the contents of the tar.gz with the expected contents (using\
        \ baseline file in liquibase-dist directory) to ensure that no new files were\
        \ accidentally added. A failure here indicates that a new file was added to\
        \ the tar.gz, and it should either be rectififed or added to the baseline.\"\
        \nbrew install tree --quiet\ntree liquibase-dist/target/liquibase-${{ needs.setup.outputs.thisBranchName\
        \ }}-SNAPSHOT -o actual-distribution-contents.txt --noreport\n# remove first\
        \ line of actual, because it contains the folder name, which the expected\
        \ will not have\necho \"$(tail -n +2 actual-distribution-contents.txt)\" >\
        \ actual-distribution-contents.txt\ndiff actual-distribution-contents.txt\
        \ liquibase-dist/expected-distribution-contents.txt\nrm -rf actual-distribution-contents.txt\
        \ \n\n##create zip file from tar content\n(cd liquibase-dist/target/liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT && zip -r ../liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT.zip *)\necho \"liquibase-dist/target/liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT\"\nls liquibase-dist/target/liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT\n\n##create installer - disabled\
        \ here but run as nightly job and as part of release workflow\n# (cd liquibase-dist\
        \ && ${{ github.workspace }}/.github/util/package-install4j.sh 0-SNAPSHOT)\n\
        \nfind . -name original-*.jar -exec rm {} \\;\n\nmkdir -p artifacts\ncp liquibase-dist/target/liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT.tar.gz artifacts\ncp liquibase-dist/target/liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT.zip artifacts\ncp liquibase-core/target/liquibase-core-0-SNAPSHOT.jar\
        \ artifacts/liquibase-core-0-SNAPSHOT.jar\n#cp liquibase-dist/target/liquibase-${{\
        \ needs.setup.outputs.thisBranchName }}-SNAPSHOT/internal/lib/liquibase-core.jar\
        \ artifacts/liquibase-core-0-SNAPSHOT.jar\n\ncp liquibase-core/target/liquibase-core-0-SNAPSHOT-sources.jar\
        \ artifacts/liquibase-core-0-SNAPSHOT-sources.jar\ncp target/liquibase-0-SNAPSHOT-javadoc.jar\
        \ artifacts/liquibase-core-0-SNAPSHOT-javadoc.jar\n\n##create installer -\
        \ disabled here but run as nightly job and as part of release workflow\n#cp\
        \ liquibase-dist/target/liquibase-*-installer-* artifacts\n\ncp liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT.jar\
        \ artifacts\ncp liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT-sources.jar\
        \ artifacts\ncp liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT-javadoc.jar\
        \ artifacts\n\ncp liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT.jar artifacts\n\
        cp liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT-sources.jar artifacts\ncp\
        \ liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT-javadoc.jar artifacts\n\n\
        cp liquibase-cdi-jakarta/target/liquibase-cdi-jakarta-0-SNAPSHOT.jar artifacts\n\
        cp liquibase-cdi-jakarta/target/liquibase-cdi-jakarta-0-SNAPSHOT-sources.jar\
        \ artifacts\ncp liquibase-cdi-jakarta/target/liquibase-cdi-jakarta-0-SNAPSHOT-javadoc.jar\
        \ artifacts\n\necho \"Source code not available for liquibase-commercial\"\
        \ > /tmp/readme.source.txt\n(cd /tmp && jar cf liquibase-commercial-${{ needs.setup.outputs.proBranchNamePrefix\
        \ }}-SNAPSHOT-sources.jar readme.source.txt)\n\necho \"Javadocs not available\
        \ for liquibase-commercial\" > /tmp/readme.javadocs.txt\n(cd /tmp && jar cf\
        \ liquibase-commercial-${{ needs.setup.outputs.proBranchNamePrefix }}-SNAPSHOT-javadoc.jar\
        \ readme.javadocs.txt)\n\nls -R /Users/runner/.m2/repository/org/liquibase/liquibase-commercial\n\
        echo \"/Users/runner/.m2/repository/org/liquibase/liquibase-commercial \"\n\
        \ncommercialJarM2Location=/Users/runner/.m2/repository/org/liquibase/liquibase-commercial/${{\
        \ needs.setup.outputs.proBranchNamePrefix }}-SNAPSHOT/liquibase-commercial-${{\
        \ needs.setup.outputs.proBranchNamePrefix }}-SNAPSHOT.jar\ncp $commercialJarM2Location\
        \ artifacts\ncp /tmp/liquibase-commercial-${{ needs.setup.outputs.proBranchNamePrefix\
        \ }}-SNAPSHOT-sources.jar artifacts\ncp /tmp/liquibase-commercial-${{ needs.setup.outputs.proBranchNamePrefix\
        \ }}-SNAPSHOT-javadoc.jar artifacts\n\n.github/util/sign-artifacts.sh artifacts\n\
        \n##prepare branch-named convenience artifacts directories\nmkdir artifacts-named\n\
        cp liquibase-dist/target/liquibase-${{ needs.setup.outputs.thisBranchName\
        \ }}-SNAPSHOT.tar.gz artifacts-named/liquibase-${{ needs.setup.outputs.thisBranchName\
        \ }}.tar.gz\n#cp liquibase-dist/target/liquibase-${{ needs.setup.outputs.thisBranchName\
        \ }}-SNAPSHOT/internal/lib/liquibase-core.jar artifacts-named/liquibase-core-${{\
        \ needs.setup.outputs.thisBranchName }}.jar\ncp liquibase-core/target/liquibase-core-0-SNAPSHOT.jar\
        \ artifacts-named/liquibase-core-${{ needs.setup.outputs.thisBranchName }}.jar\n\
        cp liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT.jar artifacts-named/liquibase-maven-plugin-${{\
        \ needs.setup.outputs.thisBranchName }}.jar\ncp liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT.jar\
        \ artifacts-named/liquibase-cdi-${{ needs.setup.outputs.thisBranchName }}.jar\n\
        cp liquibase-cdi-jakarta/target/liquibase-cdi-jakarta-0-SNAPSHOT.jar artifacts-named/liquibase-cdi-jakarta-${{\
        \ needs.setup.outputs.thisBranchName }}.jar\ncp liquibase-extension-testing/target/liquibase-extension-testing-0-SNAPSHOT.jar\
        \ artifacts-named/liquibase-extension-testing-${{ needs.setup.outputs.thisBranchName\
        \ }}.jar\ncp liquibase-extension-testing/target/liquibase-extension-testing-0-SNAPSHOT-deps.jar\
        \ artifacts-named/liquibase-extension-testing-${{ needs.setup.outputs.thisBranchName\
        \ }}-deps.jar\n\n#check why only this step has branchName when there is a\
        \ standalone PR\ncp $commercialJarM2Location artifacts-named/liquibase-commercial-${{\
        \ needs.setup.outputs.thisBranchName }}.jar\n"
    - continue-on-error: true
      name: Archive Packages
      uses: actions/upload-artifact@v3
      with:
        name: liquibase-artifacts
        path: artifacts/*
    - continue-on-error: true
      name: Archive Convenience Zip
      uses: actions/upload-artifact@v3
      with:
        name: liquibase-zip-${{ needs.setup.outputs.thisBranchName }}
        path: liquibase-dist/target/liquibase-${{ needs.setup.outputs.thisBranchName
          }}-SNAPSHOT/*
    - continue-on-error: true
      name: Archive Convenience Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: liquibase-artifacts-${{ needs.setup.outputs.thisBranchName }}
        path: artifacts-named/*
    - continue-on-error: true
      name: Version Artifact Publish <commitsha>-SNAPSHOT version to GPM
      run: './mvnw versions:set "-DnewVersion=${{ needs.setup.outputs.latestMergeSha
        }}-SNAPSHOT"

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish <commitsha>-SNAPSHOT package
      run: './mvnw -B clean deploy -pl ''!liquibase-dist'' -DskipTests=true "-Dbuild.repository.owner=liquibase"
        "-Dbuild.repository.name=liquibase" "-Dbuild.branch=${{ needs.setup.outputs.thisBranchName
        }}" "-Dbuild.number=${{ github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.latestMergeSha
        }}" "-Dbuild.timestamp=${{ needs.setup.outputs.timeStamp }}"

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish tar.gz package to GPM
      run: './mvnw -B -pl liquibase-dist -P liquibase-commercial clean deploy -DskipTests=true
        "-Dliquibase-pro.version=${{ needs.setup.outputs.proBranchNamePrefix }}-SNAPSHOT"
        "-Dbuild.timestamp=${{ needs.setup.outputs.timestamp }}" "-Dbuild.repository.owner=liquibase"
        "-Dbuild.repository.name=liquibase" "-Dbuild.branch=${{ needs.setup.outputs.thisBranchName
        }}" "-Dbuild.number=${{ github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.thisSha
        }}"

        '
  run-functional-tests:
    needs:
    - setup
    - build_publish_branch
    secrets: inherit
    uses: liquibase/liquibase/.github/workflows/run-functional-tests.yml@master
    with:
      latestMergeSha: ${{ needs.setup.outputs.latestMergeSha }}
      thisBranchName: ${{ needs.setup.outputs.unmodifiedBranchName }}
  run-tests-harness:
    needs:
    - setup
    - build_publish_branch
    secrets: inherit
    uses: liquibase/liquibase/.github/workflows/run-test-harness.yml@master
    with:
      latestMergeSha: ${{ needs.setup.outputs.latestMergeSha }}
      thisBranchName: ${{ needs.setup.outputs.unmodifiedBranchName }}
  setup:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    name: Setup
    outputs:
      branchExistsInBoth: ${{ steps.check-branch.outputs.branchExistsInBoth }}
      latestMergeSha: ${{ steps.get-sha.outputs.latestMergeSha }}
      proBranchNamePrefix: ${{ steps.check-branch.outputs.proBranchNamePrefix }}
      thisBranchName: ${{ steps.get-branch-name.outputs.thisBranchName }}
      timeStamp: ${{ steps.get-timestamp.outputs.timestamp }}
      unmodifiedBranchName: ${{ steps.get-branch-name.outputs.unmodifiedBranchName
        }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.event.after}}
    - continue-on-error: true
      id: get-sha
      name: Get Latest Merge Commit SHA
      run: 'latest_merge_sha=`(git rev-parse HEAD)`

        echo "latestMergeSha=${latest_merge_sha}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: get-timestamp
      name: Get Timestamp
      run: 'timeStamp=$(date +''%Y-%m-%d %H:%M:%S %Z'')

        echo "timestamp=${timeStamp}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: get-branch-name
      name: Get Current BranchName
      run: "# this logic checks if the branch is from a forked repository PR or not.\
        \ Where -n is the inverse of -z (not empty)\nif [ -n \"${GITHUB_HEAD_REF}\"\
        \ ];\nthen\n  branch_name=${GITHUB_HEAD_REF}\nelse\n  branch_name=${{ github.ref_name\
        \ }}\nfi \n\nmodified_branch_name=`(echo $branch_name | tr '/' '_')`\necho\
        \ \"thisBranchName=$modified_branch_name\" >> $GITHUB_OUTPUT \n\n#this is\
        \ to check if the same branch name exists in PRO, we need it in check-branch\
        \ step\necho \"unmodifiedBranchName=$branch_name\" >> $GITHUB_OUTPUT \n\n\
        echo \"Modified Branch Name:\" $modified_branch_name\necho \"Original Branch\
        \ Name thisBranchName:\" $branch_name\n"
    - continue-on-error: true
      name: Checkout OSS Repo
      uses: actions/checkout@v4
      with:
        repository: liquibase/liquibase
    - continue-on-error: true
      id: check-branch
      name: Check branch existence
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}
        script: "const currentBranch = \"${{ steps.get-branch-name.outputs.unmodifiedBranchName\
          \ }}\" \nconsole.log(currentBranch)\nlet branchExistsInBoth;\ntry {\n  await\
          \ github.rest.repos.getBranch({\n    owner: \"liquibase\",\n    repo: \"\
          liquibase-pro\",\n    branch: currentBranch\n  });\n  branchExistsInBoth\
          \ = true\n} catch (error){\n  branchExistsInBoth = false\n}\nlet liquibaseProVersionPrefix=\
          \ branchExistsInBoth ? currentBranch : 'master'\nliquibaseProVersionPrefix=liquibaseProVersionPrefix.replaceAll(\"\
          /\",\"_\")\n\n\ncore.setOutput(\"branchExistsInBoth\", branchExistsInBoth)\n\
          core.setOutput(\"proBranchNamePrefix\", liquibaseProVersionPrefix)\nconsole.log(liquibaseProVersionPrefix)\n"
name: Build and Publish
on:
  repository_dispatch:
    types: trigger-ga___build.yml
